apiVersion: v1
kind: ConfigMap
metadata:
  name: httpserver2
  namespace: web
data:
  VERSION: "1.6"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpserver2
  namespace: web
spec:
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: httpserver2
  template:
    metadata:
      labels:
        app: httpserver2
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
    spec:
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
      - name: httpserver-regcred
      containers:
      - name: httpserver2
        image: docker.io/vk1602/httpserver:v1.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "killall httpserver"]
        resources:
          requests:
            cpu: 0.1
            memory: 50Mi
          limits:
            cpu: 0.5
            memory: 256Mi
        ports:
        - containerPort: 80
          name: http
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 3
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 3
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 5
        env:
        - name: VERSION
          valueFrom:
            configMapKeyRef:
              name: httpserver2
              key: VERSION
        volumeMounts:
        - mountPath: /cache
          name: cache-volume
      volumes:
      - name: cache-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: httpserver2
  namespace: web
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: httpserver2